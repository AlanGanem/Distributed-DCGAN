# Playbook para implantação e execução da DCGAN
# Você deve adicionar mais tasks a partir do local indicado, abaixo.
# Lembre-se que a indentação é muito importante.
# Para mais informações sobre YAML, veja: https://docs.ansible.com/ansible/latest/reference_appendices/YAMLSyntax.html

- name: "Play 1: Configurar e executar a DCGAN em uma máquina."
  hosts: cloud
  tasks:
  # Teste simples. A mensagem "Teste SSH OK!" deve ser impressa na tela
  - name: "Task 1: Testando o SSH"
    debug:
      msg: "Teste SSH OK!"

<<<<<<< HEAD
  - name: "Task 2: Instalar python e docker"
    shell: apt update; apt install python3-pip docker.io -y
    become: yes
    

  # Task utilizada para adicionar o usuário ubuntu ao grupo Docker
  - name: "Task 3: Adicionar usuario ubuntu ao grupo docker"
    become: true
    user:
      name: ubuntu
      groups: docker
      append: yes

  # Reinicia a conexão SSH
  - name: "Task 4: Reinicar a conexão ssh para a alterações de grupos tenham efeito"
    ansible.builtin.meta:
      reset_connection

  ###############################################
  #   Adicione suas tasks a partir daqui..      #
  ###############################################
  - name: "Task 5: Clonar repo"
    ansible.builtin.shell: cd ~; git clone "https://github.com/eborin/Distributed-DCGAN.git"
  
  - name: "Task 6: Criar imagem"
    ansible.builtin.shell: cd Distributed-DCGAN; git fetch; git checkout ativ-7-exp-1; docker build -t dist_dcgan:latest .      
    poll: 30
    async: 600

  - name: "Task 7: Treinar rede"
    ansible.builtin.shell: "cd ~/Distributed-DCGAN; git fetch; git checkout ativ-7-exp-1; docker run --rm -e HOMEDIR=$(pwd) -w $(pwd) -v=$(pwd):$(pwd) dist_dcgan:latest python -m torch.distributed.launch dist_dcgan.py --dataset mnist --dataroot data --download --image_size 64 --batch_size 128 --out_folder output --test_data --num_epochs 1 --max_workers 1 >> output.txt"
    poll: 30
    async: 600
  
  - name: "Task 8: Copiar saída para máquina local"
    ansible.builtin.fetch:
      src: ~/Distributed-DCGAN/output.txt
      dest: ./{{ inventory_hostname }}-output.txt
      flat: yes

  ###############################################
  #   Fim das suas tasks..                      #
  ###############################################

  # Imprime uma mensagem de sucesso
  - name: "Task 9: Final"
    debug:
      msg: "Playbook executado com sucesso!"

